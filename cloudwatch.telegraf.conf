###############################################################################
#                        TELEGRAF AGENT CONFIG                                #
###############################################################################

[agent]
  # Run telegraf with debug log messages?
  debug = false
   # How often to collect metrics
  interval = "30s"
  # Default flushing interval for all outputs
  flush_interval = "10s"
  # How many metrics to cache
  metric_buffer_limit = 50000

###############################################################################
#                        TELEGRAF INPUTS                                      #
###############################################################################

[[inputs.cloudwatch]]
  # AWS Region of Cloudwatch service you're pulling metrics from
  # region = "eu-central-1"   # Frankfurt
  # region = "eu-north-1"     # Stockholm
  # region = "eu-west-1"      # Dublin
  # region = "eu-west-2"      # London
  # region = "eu-west-3"      # Paris
  # region = "eu-south-1"     # Milan
  # region = "us-east-1"      # Virginia
  # region = "us-east-2"      # Ohio
  # region = "us-west-1"      # Northern California
  region = "us-west-2"        # Oregon
  # More: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html

  # AWS credentials
  # Credentials are loaded in the following order
  # 1) Assumed credentials via STS if role_arn is specified
  # 2) explicit credentials from 'access_key' and 'secret_key'
  # 3) shared profile from 'profile'
  # 4) environment variables
  # 5) shared credentials file
  # 6) EC2 Instance Profile
  # access_key = ""
  # secret_key = ""
  # token = ""
  # role_arn = ""
  # profile = ""
  shared_credential_file = "./credentials"
 
  # Requested CloudWatch aggregation Period (required - must be a multiple of 60s)
  period = "1m"
  # Collection Delay (required - must account for metrics availability via CloudWatch API)
  delay = "5m"
  # Recommended: use metric 'interval' that is a multiple of 'period' to avoid
  # gaps or overlap in pulled data
  interval = "1m"

  # Metric Statistic Namespace (required)
  # List of namespaces: https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html
  namespace = "AWS/EC2"
  # Maximum requests per second. Note that the global default AWS rate limit is
  # 50 reqs/sec, so if you define multiple namespaces, these should add up to a
  # maximum of 50.
  ratelimit = 25
  
  # Optional tags that you can add
  [inputs.cloudwatch.tags]
  plugin = 'cloudwatch'
  aws_service = 'ec2'

[[inputs.cloudwatch.metrics]]
  # List of EC2 metrics available: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html
  names = ["StatusCheckFailed","EBSReadBytes","CPUSurplusCreditsCharged","EBSByteBalance%",
          "StatusCheckFailed_System","EBSWriteBytes","NetworkIn","CPUCreditUsage",
          "EBSIOBalance%","EBSReadOps","CPUCreditBalance","StatusCheckFailed_Instance",
          "CPUUtilization","NetworkOut"]

[[inputs.cloudwatch.metrics.dimensions]]
  name = "InstanceId"
  # This will be unique for each AWS instance
  value = "i-06025f2fbf47c26ac"

[[inputs.cloudwatch]]
  region = "us-west-2"
  shared_credential_file = "./credentials"
  period = "1m"
  delay = "15m"
  interval = "1m"
  namespace = "AWS/NetworkELB"
  ratelimit = 25
  [inputs.cloudwatch.tags]
  plugin = 'cloudwatch'
  aws_service = 'elb'

# Collect metrics on Telegraf itself
[[inputs.internal]]
  collect_memstats = true
  # Tag stats with the metric name for easier retrieval
  [inputs.internal.tags]
  plugin = 'internal'

###############################################################################
#                        TELEGRAF OUTPUTS                                     #
###############################################################################

[[outputs.influxdb_v2]]
  # Location of your InfluxDB Cloud instance
  # Cloud URLs: https://v2.docs.influxdata.com/v2.0/reference/urls/
  urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
  # Store token in an environment variable called US_WEST_2_1
  token = "$US_WEST_2_1"
  # Your org is the email you signed up with
  organization = "asargent@influxdata.com"
  bucket = "aws"
  # About 5x faster
  content_encoding = "gzip"

[[outputs.influxdb_v2]]
  # Cloud URLs: https://v2.docs.influxdata.com/v2.0/reference/urls/
  urls = ["https://eu-central-1-1.aws.cloud2.influxdata.com"]
  # Store token in an environment variable called EU_CENTRAL_1_1
  token = "$EU_CENTRAL_1_1"
  organization = "asargent+aws-eu-central-1@influxdata.com"
  bucket = "aws"
  content_encoding = "gzip"

# Good for debugging
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"
